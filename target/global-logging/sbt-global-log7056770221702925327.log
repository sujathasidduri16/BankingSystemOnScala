[debug] > Exec(;reload; set _root_.org.jetbrains.sbt.StructureKeys.sbtStructureOptions in Global := "download resolveClassifiers" ;preferScala2;*/*:dumpStructureTo C:/Users/srava/AppData/Local/Temp/sbt-structure10.xml; session clear-all ; set ideaPort in Global := 50116, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.7.2 (Oracle Corporation Java 19)
[debug]       Load.loadUnit: plugins took 29.903ms
[debug]       Load.loadUnit: defsScala took 0.0114ms
[debug] [Loading] Scanning directory C:\Users\srava\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\srava\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.6533 ms
[debug]           Load.resolveProject(global-plugins) took 1.7624ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\srava\.sbt\1.0\plugins, plugins: List(<none>))) took 4.2017ms
[debug] [Loading] Done in C:\Users\srava\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 5.5808ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.0141ms
[debug]     Load.loadUnit(file:/C:/Users/srava/.sbt/1.0/plugins/, ...) took 36.8846ms
[debug]   Load.apply: load took 38.4715ms
[debug]   Load.apply: resolveProjects took 0.1349ms
[debug]   Load.apply: finalTransforms took 14.0851ms
[debug]   Load.apply: config.delegates took 0.448ms
[debug]   Load.apply: Def.make(settings)... took 54.9244ms
[debug]   Load.apply: structureIndex took 32.2671ms
[debug]   Load.apply: mkStreams took 0.0033ms
[info] loading global plugins from C:\Users\srava\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 366.0268ms
[debug]           Load.loadUnit: plugins took 14.8113ms
[debug]           Load.loadUnit: defsScala took 0.0018ms
[debug] [Loading] Scanning directory C:\Users\srava\IdeaProjects\BankingProject\project
[debug]             Load.loadUnit: mkEval took 0.1772ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\srava\IdeaProjects\BankingProject\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.2079 ms
[info] loading settings for project bankingproject-build from idea11.sbt ...
[debug]               Load.resolveProject(bankingproject-build) took 1.273ms
[debug]             Load.loadTransitive: finalizeProject(Project(id bankingproject-build, base: C:\Users\srava\IdeaProjects\BankingProject\project, plugins: List(<none>))) took 2.861ms
[debug] [Loading] Done in C:\Users\srava\IdeaProjects\BankingProject\project, returning: (bankingproject-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 15.1455ms
[debug]           Load.loadUnit: cleanEvalClasses took 2.2014ms
[debug]         Load.loadUnit(file:/C:/Users/srava/IdeaProjects/BankingProject/project/, ...) took 32.8411ms
[debug]       Load.apply: load took 34.3584ms
[debug]       Load.apply: resolveProjects took 0.196ms
[debug]       Load.apply: finalTransforms took 8.7657ms
[debug]       Load.apply: config.delegates took 0.3291ms
[debug]       Load.apply: Def.make(settings)... took 56.1858ms
[debug]       Load.apply: structureIndex took 21.4339ms
[debug]       Load.apply: mkStreams took 0.0021ms
[info] loading project definition from C:\Users\srava\IdeaProjects\BankingProject\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 236.6661ms
[debug]     Load.loadUnit: defsScala took 0.0025ms
[debug] [Loading] Scanning directory C:\Users\srava\IdeaProjects\BankingProject
[debug]       Load.loadUnit: mkEval took 0.1934ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.0558 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 23.9057ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\srava\IdeaProjects\BankingProject, plugins: List(<none>))) took 26.5814ms
[debug] [Loading] Done in C:\Users\srava\IdeaProjects\BankingProject, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 75.5921ms
[debug]     Load.loadUnit: cleanEvalClasses took 10.2706ms
[debug]   Load.loadUnit(file:/C:/Users/srava/IdeaProjects/BankingProject/, ...) took 323.195ms
[debug] Load.apply: load took 324.2461ms
[debug] Load.apply: resolveProjects took 0.1341ms
[debug] Load.apply: finalTransforms took 16.8864ms
[debug] Load.apply: config.delegates took 0.4553ms
[debug] Load.apply: Def.make(settings)... took 52.3325ms
[debug] Load.apply: structureIndex took 24.4159ms
[debug] Load.apply: mkStreams took 0.0034ms
[warn] Discarding 1 session setting.  Use 'session save' to persist session settings.
[info] set current project to BankingProject (in build file:/C:/Users/srava/IdeaProjects/BankingProject/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(set _root_.org.jetbrains.sbt.StructureKeys.sbtStructureOptions in Global := "download resolveClassifiers", None, None)
[info] Defining Global / sbtStructureOptions
[info] The new value will be used by Global / ssOptions
[debug] Defining 
[debug] 	Global / sbtStructureOptions
[debug] 
[debug] The new value will be used by 
[debug] 	Global / ssOptions
[info] Reapplying settings...
[info] set current project to BankingProject (in build file:/C:/Users/srava/IdeaProjects/BankingProject/)
[debug] > Exec(preferScala2, None, None)
[debug] > Exec(*/*:dumpStructureTo C:/Users/srava/AppData/Local/Temp/sbt-structure10.xml, None, None)
[debug] Evaluating tasks: Global / dumpStructureTo
[warn] sbt 0.13 shell syntax is deprecated; use slash syntax instead: Global / dumpStructureTo
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[info] Writing structure to C:\Users\srava\AppData\Local\Temp\sbt-structure10.xml...
[info] Done.
[success] Total time: 0 s, completed 20 Oct 2022, 15:50:18
[debug] > Exec(session clear-all, None, None)
[info] Reapplying settings...
[info] set current project to BankingProject (in build file:/C:/Users/srava/IdeaProjects/BankingProject/)
[debug] > Exec(set ideaPort in Global := 50116, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to BankingProject (in build file:/C:/Users/srava/IdeaProjects/BankingProject/)
[debug] > Exec(idea-shell, None, None)
[debug] > Exec(, None, None)
[debug] > Exec(idea-shell, None, None)
